{
  "DemandAnalysis": {
    "assistant_role_name": "Chief Product Officer",
    "user_role_name": "Chief Executive Officer",
    "phase_prompt": [
      "ChatDev has made products in the following form before:",
      "Image: can present information in line chart, bar chart, flow chart, cloud chart, Gantt chart, etc.",
      "Document: can present information via .docx files.",
      "PowerPoint: can present information via .pptx files.",
      "Excel: can present information via .xlsx files.",
      "PDF: can present information via .pdf files.",
      "Website: can present personal resume, tutorial, products, or ideas, via .html files.",
      "Application: can implement visualized game, software, tool, etc, via python.",
      "Dashboard: can display a panel visualizing real-time information.",
      "Mind Map: can represent ideas, with related concepts arranged around a core concept.",
      "As the {assistant_role}, to satisfy the new user's demand and the product should be realizable, you should keep discussing with me to decide which product modality do we want the product to be?",
      "Note that we must ONLY discuss the product modality and do not discuss anything else! Once we all have expressed our opinion(s) and agree with the results of the discussion unanimously, any of us must actively terminate the discussion by replying with only one line, which starts with a single word <INFO>, followed by our final product modality without any other words, e.g., \"<INFO> PowerPoint\"."
    ]
  },
  "LanguageChoose": {
    "assistant_role_name": "Chief Technology Officer",
    "user_role_name": "Chief Executive Officer",
    "phase_prompt": [
      "According to the new user's task and some creative brainstorm ideas listed below: ",
      "Task: \"{task}\".",
      "Modality: \"{modality}\".",
      "Ideas: \"{ideas}\".",
      "We have decided to complete the task through a executable software implemented via a programming language. ",
      "As the {assistant_role}, to satisfy the new user's demand and make the software realizable, you should propose a concrete programming language. If python can complete this task via Python, please answer Python; otherwise, answer another programming language (e.g., Java, C++, etc,).",
      "Note that we must ONLY discuss the target programming language and do not discuss anything else! Once we all have expressed our opinion(s) and agree with the results of the discussion unanimously, any of us must actively terminate the discussion and conclude the best programming language we have discussed without any other words or reasons, return only one line using the format: \"<INFO> *\" where \"*\" represents a programming language, e.g., \"<INFO> python\"."
    ]
  },
  "Coding": {
    "assistant_role_name": "Programmer",
    "user_role_name": "Chief Technology Officer",
    "phase_prompt": [
      "According to the new user's task and our software designs listed below: ",
      "Task: \"{task}\".",
      "Task description: \"{description}\".",
      "Modality: \"{modality}\".",
      "Programming Language: \"{language}\"",
      "Ideas:\"{ideas}\"",
      "We have decided to complete the task through a executable software with multiple files implemented via {language}. As the {assistant_role}, to satisfy the new user's demands, you should write one or multiple files and make sure that every detail of the architecture is, in the end, implemented as code. {gui}",
      "Think step by step and reason yourself to the right decisions to make sure we get it right.",
      "You will first lay out the names of the core classes, functions, methods that will be necessary, as well as a quick comment on their purpose.",
      "Then you will output the content of each file including complete code. Each file must strictly follow a markdown code block format, where the following tokens must be replaced such that \"FILENAME\" is the lowercase file name including the file extension, \"LANGUAGE\" is the programming language, \"DOCSTRING\" is a string literal specified in source code that is used to document a specific segment of code, and \"CODE\" is the original code:",
      "FILENAME",
      "```LANGUAGE",
      "'''",
      "DOCSTRING",
      "'''",
      "CODE",
      "```",
      "You will start with the \"main\" file, then go to the ones that are imported by that file, and so on.",
      "Please note that the code should be fully functional. Ensure to implement all functions. No placeholders (such as 'pass' in Python)."
    ]
  },
  "TaskDecomposition": {
    "assistant_role_name": "Chief Product Officer",
    "user_role_name": "Chief Executive Officer",
    "phase_prompt": [
      "According to the new user's task",
      "Task: \"{task}\".",
      "As the {assistant_role}, your task is to extract and list every specific requirement or rule from the **Task** that needs to be checked or reviewed.",
      "Each subtask MUST be an unmodified, original sentence directly from the **Task** description.",
      "Your decomposition should comprehensively cover the **Task**, but should not be overly granular â€” make sure each subtask represents a complete and meaningful requirement.",
      "Please output the list of subtasks in the following format:",
      "<INFO> [\"subtask1\", \"subtask2\", ... ]"
    ]
  },
  "CodeLocalization": {
    "assistant_role_name": "Programmer",
    "user_role_name": "Chief Technology Officer",
    "phase_prompt": [
      "According to the new user's task and our software designs listed below:",
      "Task: \"{task}\".",
      "Modality: \"{modality}\".",
      "Programming Language: \"{language}\".",
      "Codes:",
      "\"{codes}\"",
      "Given the following specific task item that needs to be reviewed:",
      "\"{task_item}\"",
      "As the {assistant_role}, your task is to locate all code snippets in the provided code that are directly relevant to the above task item.",
      "For each relevant code snippet, output strictly in the following format:",
      "",
      "FILENAME",
      "```LANGUAGE",
      "CODE",
      "```",
      "",
      "Where:",
      "- FILENAME: the name of the file (all lowercase, including extension)",
      "- LANGUAGE: programming language for syntax highlighting",
      "- CODE: the relevant code snippet",
      "",
      "If there are multiple relevant snippets in the same file, output each snippet as a separate code block, using the same file name.",
      "If no relevant code is found for the task item, output exactly one line: \"<INFO> Not found\"",
      "Do not add any explanations, comments, or output other than required format."
    ]
  },
  "DetailedTaskReviewComment": {
    "assistant_role_name": "Code Reviewer",
    "user_role_name": "Programmer",
    "phase_prompt": [
      "According to the new user's task and our software designs:",
      "Task: \"{task}\".",
      "Modality: \"{modality}\".",
      "Programming Language: \"{language}\"",
      "Codes:",
      "\"{codes}\"",
      "Given the following specific task item to be reviewed:",
      "\"{task_item}\"",
      "And the following code snippet(s) identified as related to this task item:",
      "\"{code_snippets}\"",
      "As the {assistant_role}, carefully check whether the given code snippet(s) and other relatived codes fully and correctly implement the requirement stated in the task item: \"{task_item}\". You must judge strictly according to the requirement in the task item. Do not make up, infer, or suggest any changes or extensions to the requirement that are not explicitly stated in the task item. Do not propose modifying the specification or adding new event types, behaviors, or formats that are not present in the task item.",
      "When determining 'Unit Test Necessity', ONLY evaluate the current task item \"{task_item}\". Determine whether further unit testing is needed based on your confidence in your review results, whether the task item is concrete, and whether the relevant code implements specific logic.",
      "ATTENTION: Use '##' to SPLIT SECTIONS, not '#'. Output format carefully referenced \"Output Format\".",
      "# Output Format",
      "Your response must strictly follow the format below:",
      "## Code Review Comment",
      "...",
      "## Code Review Result",
      "PASS/FAIL",
      "## Unit Test Necessity",
      "True/False"
    ]
  },
  "CodeComplete": {
    "assistant_role_name": "Programmer",
    "user_role_name": "Chief Technology Officer",
    "phase_prompt": [
      "According to the new user's task and our software designs listed below: ",
      "Task: \"{task}\".",
      "Modality: \"{modality}\".",
      "Programming Language: \"{language}\"",
      "Codes:",
      "\"{codes}\"",
      "Unimplemented File:",
      "\"{unimplemented_file}\"",
      "In our software, each file must strictly follow a markdown code block format, where the following tokens must be replaced such that \"FILENAME\" is the lowercase file name including the file extension, \"LANGUAGE\" is the programming language, \"DOCSTRING\" is a string literal specified in source code that is used to document a specific segment of code, and \"CODE\" is the original code:",
      "FILENAME",
      "```LANGUAGE",
      "'''",
      "DOCSTRING",
      "'''",
      "CODE",
      "```",
      "As the {assistant_role}, to satisfy the complete function of our developed software, you have to implement all methods in the {unimplemented_file} file which contains a unimplemented class. Now, implement all methods of the {unimplemented_file} and all other codes needed, then output the fully implemented codes, strictly following the required format."
    ]
  },
  "TestErrorSummary": {
    "assistant_role_name": "Programmer",
    "user_role_name": "Software Test Engineer",
    "phase_prompt": [
      "Our developed source codes and corresponding test reports are listed below: ",
      "Programming Language: \"{language}\"",
      "Source Codes:",
      "\"{codes}\"",
      "Test Reports of Source Codes:",
      "\"{test_reports}\"",
      "According to my test reports, please locate and summarize the bugs that cause the problem."
    ]
  },
  "UnitTestCoding": {
    "assistant_role_name": "Software Test Engineer",
    "user_role_name": "Chief Technology Officer",
    "phase_prompt": [
      "According to the new user's task and our software designs:",
      "Task: \"{task}\".",
      "Modality: \"{modality}\".",
      "Programming Language: \"{language}\"",
      "Codes:",
      "\"{codes}\"",
      "Given the following specific task item to be tested:",
      "\"{task_item}\"",
      "And the following code snippet(s) identified as related to this task item:",
      "\"{code_snippets}\"",
      "As the {assistant_role}, in order to ensure the correctness of the specified code, please focus exclusively on writing unit tests for the above specific task item.",
      "You are required to write unit tests only for the given \"{task_item}\"; do not consider any other task items.",
      "Import the concrete implementations to be tested directly from the source code.",
      "Most importantly, keep the unit test code as simple as possible to ensure there are no logical errors in the test code itself."
    ]
  },
  "UnitTestExecution": {
    "assistant_role_name": "Programmer",
    "user_role_name": "Software Test Engineer",
    "phase_prompt": [
      "According to the new user's task and our software designs:",
      "Task: \"{task}\".",
      "Modality: \"{modality}\".",
      "Programming Language: \"{language}\"",
      "Codes:",
      "\"{codes}\"",
      "Given the following specific task item to be tested:",
      "\"{task_item}\"",
      "And the following code snippet(s) identified as related to this task item:",
      "\"{code_snippets}\"",
      "Our unit test code for the above subtask item is as follows:",
      "```{language}",
      "{unit_test_code}",
      "```",
      "The unit test report is as follows:",
      "{unit_test_report}",
      "As the {assistant_role}, please analyze the test report and identify and summarize the source of each problem.",
      "For each failed test case, use mathematical or logical reasoning based on the task description to step-by-step confirm whether the root cause of failure lies in the source code or in the unit test code.",
      "After your analysis, please modify the relevant implementation according to your reasoning.",
      "ATTENTION: Use '##' to SPLIT SECTIONS, not '#'. Output format carefully referenced \"Output Format\".",
      "# Output Format",
      "Your response must strictly follow the format below:",
      "## Analysis",
      "...",
      "## Problem Source",
      "Source Code / Unit Test Code",
      "## Code Modification",
      "..."
    ]
  },
  "TestModification": {
    "assistant_role_name": "Programmer",
    "user_role_name": "Software Test Engineer",
    "phase_prompt": [
      "Our developed source codes and corresponding test reports are listed below: ",
      "Programming Language: \"{language}\"",
      "Source Codes:",
      "\"{codes}\"",
      "Test Reports of Source Codes:",
      "\"{test_reports}\"",
      "Error Summary of Test Reports:",
      "\"{error_summary}\"",
      "Note that each file must strictly follow a markdown code block format, where the following tokens must be replaced such that \"FILENAME\" is the lowercase file name including the file extension, \"LANGUAGE\" is the programming language, \"DOCSTRING\" is a string literal specified in source code that is used to document a specific segment of code, and \"CODE\" is the original code:",
      "FILENAME",
      "```LANGUAGE",
      "'''",
      "DOCSTRING",
      "'''",
      "CODE",
      "```",
      "As the {assistant_role}, to satisfy the new user's demand and make the software execute smoothly and robustly, you should modify the codes based on the error summary. Now, use the format exemplified above and modify the problematic codes based on the error summary. Output the codes that you fixed based on the test reported and corresponding explanations (strictly follow the format defined above, including FILENAME, LANGUAGE, DOCSTRING and CODE; incomplete \"TODO\" codes are strictly prohibited). If no bugs are reported, please return only one line like \"<INFO> Finished\"."
    ]
  },
  "ModificationPlanGeneration": {
    "assistant_role_name": "Chief Technology Officer",
    "user_role_name": "Code Reviewer",
    "phase_prompt": [
      "According to the new user's task and our software designs:",
      "Task: \"{task}\".",
      "Modality: \"{modality}\".",
      "Programming Language: \"{language}\"",
      "Codes:",
      "\"{codes}\"",
      "After the team conducted comprehensive code review and unit testing of all subtasks, the issues are summarized as follows:",
      "\"{evidence}\"",
      "As the {assistant_role}, please generate a single, coherent, and conflict-free Consolidated Modification Plan based on the above code review and testing reports.",
      "Please analyze each subtask one by one, refer to both the code review and unit test results, eliminate any potential conflicts from different sources, and form a unified modification plan.",
      "Focus exclusively on providing the modification plan for the source code only; do not include plans for test code, documentation, or any other files.",
      "The final Consolidated Modification Plan should be a clear, step-by-step instruction prompt.",
      "ATTENTION: Use '##' to SPLIT SECTIONS, not '#'. Output format carefully referenced \"Output Format\".",
      "# Output Format",
      "Your reply must strictly follow the format below. If you need to modify multiple files, provide multiple steps, each following the same format.",
      "## Step X (X is a number representing the step number)",
      "### Filename to be modified",
      "filename.suffix",
      "### Comprehensive Analysis",
      "... (Based on the team reports, provide your analysis of the code to be modified)",
      "### Specific Modifications",
      "... (List the specific code modifications to be made, point by point)"
    ]
  },
  "UnitTestCodeModification": {
    "assistant_role_name": "Programmer",
    "user_role_name": "Code Reviewer",
    "phase_prompt": [
      "According to the new user's task and our software designs:",
      "Task: \"{task}\".",
      "Modality: \"{modality}\".",
      "Programming Language: \"{language}\"",
      "Codes:",
      "\"{codes}\"",
      "Given the following specific task item to be reviewed:",
      "\"{task_item}\"",
      "And the following code snippet(s) identified as related to this task item:",
      "\"{code_snippets}\"",
      "We wrote unit tests for the specific subtasks above:",
      "```{language}",
      "{unit_test_code}",
      "```",
      "The unit test report and analysis is as follows:",
      "{unit_test_analysis}",
      "As the {assistant_role}, Please modify the above unit test code according to the report and analysis, and return the modified complete unit test code."
    ]
  },
  "UnifiedCodeModification": {
    "assistant_role_name": "Programmer",
    "user_role_name": "Code Reviewer",
    "phase_prompt": [
      "According to the new user's task, our designed product modality, languages and ideas, our developed first-edition source codes are listed below: ",
      "Task: \"{task}\".",
      "Modality: \"{modality}\".",
      "Programming Language: \"{language}\"",
      "Codes: ",
      "\"{codes}\"",
      "Modification Plan on Codes:",
      "\"{modification_plan}\"",
      "In the software, each file must strictly follow a markdown code block format, where the following tokens must be replaced such that \"FILENAME\" is the lowercase file name including the file extension, \"LANGUAGE\" is the programming language, \"DOCSTRING\" is a string literal specified in source code that is used to document a specific segment of code, and \"CODE\" is the original code. Format:",
      "FILENAME",
      "```LANGUAGE",
      "'''",
      "DOCSTRING",
      "'''",
      "CODE",
      "```",
      "As the {assistant_role}, to satisfy the new user's demand and make the software creative, executive and robust, you should modify corresponding codes according to the Modification Plan. Then, output the full and complete codes with all bugs fixed based on the Modification Plan. Return all codes strictly following the required format."
    ]
  },
  "CodeClean": {
    "assistant_role_name": "Programmer",
    "user_role_name": "Chief Technology Officer",
    "phase_prompt": []
  }
}